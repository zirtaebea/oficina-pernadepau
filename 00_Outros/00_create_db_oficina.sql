-- MySQL Script generated by MySQL Workbench
-- qui 27 jul 2023 17:49:17
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema oficina_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema oficina_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `oficina_db` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `oficina_db` ;

-- -----------------------------------------------------
-- Table `oficina_db`.`LOG_ALUNOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`LOG_ALUNOS` (
  `id_aluno` INT NOT NULL,
  `nome` VARCHAR(50) NULL DEFAULT NULL,
  `user` VARCHAR(100) NULL DEFAULT NULL,
  `data_alteracao` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id_aluno`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `oficina_db`.`LOG_HISTORICO_ALUNOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`LOG_HISTORICO_ALUNOS` (
  `id_pedido` INT NULL DEFAULT NULL,
  `user` VARCHAR(100) NULL DEFAULT NULL,
  `data_hora` DATETIME NULL DEFAULT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `oficina_db`.`turmas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`turmas` (
  `id_turma` INT NOT NULL AUTO_INCREMENT,
  `horario_turma` VARCHAR(10) NOT NULL,
  `qt_aulas` INT NOT NULL,
  PRIMARY KEY (`id_turma`))
ENGINE = InnoDB
AUTO_INCREMENT = 4
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `oficina_db`.`alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`alunos` (
  `id_aluno` INT NOT NULL AUTO_INCREMENT,
  `id_turma` INT NOT NULL,
  `nome` VARCHAR(50) NOT NULL,
  `data_nascimento` DATE NOT NULL,
  `contato` VARCHAR(20) NOT NULL,
  `data_insc` DATE NOT NULL,
  `experiencia` BIT(1) NOT NULL,
  `expectativas` VARCHAR(200) NULL DEFAULT 'NÃ£o respondeu',
  PRIMARY KEY (`id_aluno`),
  INDEX `FK_ALUNOS_ID_TURMA` (`id_turma` ASC) VISIBLE,
  CONSTRAINT `FK_ALUNOS_ID_TURMA`
    FOREIGN KEY (`id_turma`)
    REFERENCES `oficina_db`.`turmas` (`id_turma`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 19
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `oficina_db`.`financeiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`financeiro` (
  `id_transacao` INT NOT NULL AUTO_INCREMENT,
  `metodo_pagamento` VARCHAR(20) NOT NULL,
  `total_pago` INT NOT NULL,
  `vt_estornaveis` INT NOT NULL DEFAULT '0',
  `vt_n_estornaveis` INT NULL DEFAULT '0',
  `v_liquido` INT NOT NULL,
  `estornado` INT NOT NULL DEFAULT '0',
  PRIMARY KEY (`id_transacao`))
ENGINE = InnoDB
AUTO_INCREMENT = 19
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `oficina_db`.`pedidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`pedidos` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT,
  `id_aluno` INT NOT NULL,
  `id_transacao` INT NOT NULL,
  `status_pagamento` VARCHAR(20) NULL DEFAULT NULL,
  PRIMARY KEY (`id_pedido`),
  INDEX `FK_PEDIDOS_ID_TRANSACAO` (`id_transacao` ASC) VISIBLE,
  INDEX `FK_PEDIDOS_ID_ALUNO` (`id_aluno` ASC) VISIBLE,
  CONSTRAINT `FK_PEDIDOS_ID_ALUNO`
    FOREIGN KEY (`id_aluno`)
    REFERENCES `oficina_db`.`alunos` (`id_aluno`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_PEDIDOS_ID_TRANSACAO`
    FOREIGN KEY (`id_transacao`)
    REFERENCES `oficina_db`.`financeiro` (`id_transacao`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 21
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `oficina_db`.`historico_alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`historico_alunos` (
  `n_matricula` INT NOT NULL AUTO_INCREMENT,
  `id_pedido` INT NOT NULL,
  `id_turma` INT NOT NULL,
  `frequencia` INT NOT NULL DEFAULT '0',
  `aluno_ativo` BIT(1) NOT NULL,
  PRIMARY KEY (`n_matricula`),
  INDEX `FK_HISTORICO_ALUNOS_ID_TURMA` (`id_turma` ASC) VISIBLE,
  INDEX `FK_HISTORICO_ALUNOS_ID_PEDIDO` (`id_pedido` ASC) VISIBLE,
  CONSTRAINT `FK_HISTORICO_ALUNOS_ID_PEDIDO`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `oficina_db`.`pedidos` (`id_pedido`)
    ON DELETE CASCADE,
  CONSTRAINT `FK_HISTORICO_ALUNOS_ID_TURMA`
    FOREIGN KEY (`id_turma`)
    REFERENCES `oficina_db`.`turmas` (`id_turma`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 11
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `oficina_db` ;

-- -----------------------------------------------------
-- Placeholder table for view `oficina_db`.`alunos_por_turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`alunos_por_turma` (`n_alunos` INT, `id_turma` INT, `horario_turma` INT, `qt_aulas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `oficina_db`.`alunos_turma`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`alunos_turma` (`n_matricula` INT, `nome` INT, `id_turma` INT, `horario_turma` INT, `frequencia` INT);

-- -----------------------------------------------------
-- Placeholder table for view `oficina_db`.`contatos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`contatos` (`n_matricula` INT, `nome` INT, `id_turma` INT, `data_insc` INT, `contato` INT);

-- -----------------------------------------------------
-- Placeholder table for view `oficina_db`.`expectativas_experiencia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`expectativas_experiencia` (`n_matricula` INT, `nome` INT, `aluno_ativo` INT, `experiencia` INT, `expectativas` INT);

-- -----------------------------------------------------
-- Placeholder table for view `oficina_db`.`pagamento_alunos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `oficina_db`.`pagamento_alunos` (`id_pedido` INT, `nome` INT, `contato` INT, `metodo_pagamento` INT, `status_pagamento` INT, `total_pago` INT, `falta` INT);

-- -----------------------------------------------------
-- procedure novo_aluno
-- -----------------------------------------------------

DELIMITER $$
USE `oficina_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `novo_aluno`(a_nome VARCHAR(50), a_dnasc DATE, turma INT, contato VARCHAR(20), insc DATE, exper BIT, expec VARCHAR(200))
BEGIN
    INSERT INTO alunos (id_turma, nome, data_nascimento, contato, data_insc, experiencia, expectativas) VALUES
    (turma, a_nome, a_dnasc, contato, insc, exper, expec);
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure ordem_tabela
-- -----------------------------------------------------

DELIMITER $$
USE `oficina_db`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `ordem_tabela`(t_nome VARCHAR(30), col_campo VARCHAR(30), ordem VARCHAR(5))
BEGIN
    IF ordem = 'ASC' OR ordem = 'asc' THEN
        SET @ordenamento = CONCAT('SELECT * FROM ', t_nome, ' ORDER BY ', col_campo, ' ASC;');
    ELSE
        SET @ordenamento = CONCAT('SELECT * FROM ', t_nome, ' ORDER BY ', col_campo, ' DESC;');
    END IF;

    PREPARE stmt FROM @ordenamento;
    EXECUTE stmt;
    DEALLOCATE PREPARE stmt;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function receita_total
-- -----------------------------------------------------

DELIMITER $$
USE `oficina_db`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `receita_total`(v_liquido INT, vt_n_estornaveis INT) RETURNS char(60) CHARSET utf8mb4
    DETERMINISTIC
BEGIN
	DECLARE resultado INT;
    SET resultado = (v_liquido - vt_n_estornaveis);
    RETURN resultado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- function total_taxas
-- -----------------------------------------------------

DELIMITER $$
USE `oficina_db`$$
CREATE DEFINER=`root`@`localhost` FUNCTION `total_taxas`(vt_estornaveis INT, vt_n_estornaveis INT) RETURNS int
    DETERMINISTIC
BEGIN
	DECLARE resultado INT;
    SET resultado = (vt_estornaveis + vt_n_estornaveis);
    RETURN resultado;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- View `oficina_db`.`alunos_por_turma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `oficina_db`.`alunos_por_turma`;
USE `oficina_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `oficina_db`.`alunos_por_turma` AS select count(`a`.`id_turma`) AS `n_alunos`,`t`.`id_turma` AS `id_turma`,`t`.`horario_turma` AS `horario_turma`,`t`.`qt_aulas` AS `qt_aulas` from (`oficina_db`.`alunos` `a` join `oficina_db`.`turmas` `t` on((`t`.`id_turma` = `a`.`id_turma`))) group by `a`.`id_turma` order by `t`.`id_turma`;

-- -----------------------------------------------------
-- View `oficina_db`.`alunos_turma`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `oficina_db`.`alunos_turma`;
USE `oficina_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `oficina_db`.`alunos_turma` AS select `h`.`n_matricula` AS `n_matricula`,`a`.`nome` AS `nome`,`a`.`id_turma` AS `id_turma`,`t`.`horario_turma` AS `horario_turma`,`h`.`frequencia` AS `frequencia` from (((`oficina_db`.`alunos` `a` join `oficina_db`.`turmas` `t` on((`t`.`id_turma` = `a`.`id_turma`))) join `oficina_db`.`pedidos` `p` on((`p`.`id_aluno` = `a`.`id_aluno`))) join `oficina_db`.`historico_alunos` `h` on((`h`.`id_pedido` = `p`.`id_pedido`))) where (`a`.`id_turma` = `t`.`id_turma`) order by `h`.`n_matricula`;

-- -----------------------------------------------------
-- View `oficina_db`.`contatos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `oficina_db`.`contatos`;
USE `oficina_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `oficina_db`.`contatos` AS select `h`.`n_matricula` AS `n_matricula`,`a`.`nome` AS `nome`,`a`.`id_turma` AS `id_turma`,`a`.`data_insc` AS `data_insc`,`a`.`contato` AS `contato` from ((`oficina_db`.`alunos` `a` join `oficina_db`.`pedidos` `p` on((`p`.`id_aluno` = `a`.`id_aluno`))) join `oficina_db`.`historico_alunos` `h` on((`h`.`id_pedido` = `p`.`id_pedido`))) order by `h`.`n_matricula`;

-- -----------------------------------------------------
-- View `oficina_db`.`expectativas_experiencia`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `oficina_db`.`expectativas_experiencia`;
USE `oficina_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `oficina_db`.`expectativas_experiencia` AS select `h`.`n_matricula` AS `n_matricula`,`a`.`nome` AS `nome`,`h`.`aluno_ativo` AS `aluno_ativo`,`a`.`experiencia` AS `experiencia`,`a`.`expectativas` AS `expectativas` from ((`oficina_db`.`alunos` `a` join `oficina_db`.`pedidos` `p` on((`p`.`id_aluno` = `a`.`id_aluno`))) join `oficina_db`.`historico_alunos` `h` on((`h`.`id_pedido` = `p`.`id_pedido`))) order by `h`.`n_matricula`;

-- -----------------------------------------------------
-- View `oficina_db`.`pagamento_alunos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `oficina_db`.`pagamento_alunos`;
USE `oficina_db`;
CREATE  OR REPLACE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `oficina_db`.`pagamento_alunos` AS select `p`.`id_pedido` AS `id_pedido`,`a`.`nome` AS `nome`,`a`.`contato` AS `contato`,`f`.`metodo_pagamento` AS `metodo_pagamento`,`p`.`status_pagamento` AS `status_pagamento`,`f`.`total_pago` AS `total_pago`,(max(500) - min(`f`.`total_pago`)) AS `falta` from ((`oficina_db`.`alunos` `a` join `oficina_db`.`pedidos` `p` on((`p`.`id_aluno` = `a`.`id_aluno`))) join `oficina_db`.`financeiro` `f` on((`f`.`id_transacao` = `p`.`id_transacao`))) where (`a`.`id_aluno` = `p`.`id_aluno`) group by `p`.`id_pedido`;
USE `oficina_db`;

DELIMITER $$
USE `oficina_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `oficina_db`.`TR_LOG_ALUNOS`
AFTER INSERT ON `oficina_db`.`alunos`
FOR EACH ROW
-- CORPO DO TRIGGER
INSERT INTO LOG_ALUNOS (id_aluno, nome, user, data_alteracao) 
VALUES (NEW.id_aluno, NEW.nome, SESSION_USER(), NOW())$$

USE `oficina_db`$$
CREATE
DEFINER=`root`@`localhost`
TRIGGER `oficina_db`.`TR_LOG_HISTORICO`
BEFORE INSERT ON `oficina_db`.`historico_alunos`
FOR EACH ROW
BEGIN 
    -- VERIFIQUE SE O STATUS DO PEDIDO ESTÃ PAGO OU PENDENTE, CASO NÃO, APAREÃA O ERRO
    -- CORPO DO TRIGGER
    DECLARE PEDIDO VARCHAR(20);
    SET PEDIDO = (SELECT p.status_pagamento 
                FROM pedidos p 
                WHERE p.id_pedido = NEW.id_pedido);

    IF PEDIDO = 'Pago' THEN
		INSERT INTO LOG_HISTORICO_ALUNOS VALUES (NEW.id_pedido, SESSION_USER(), NOW());
    ELSE
    SIGNAL SQLSTATE '45000'
    SET MESSAGE_TEXT = 'ALUNO NÃO REALIZOU O PAGAMENTO';
    END IF;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
